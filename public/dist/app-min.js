var scrollToElement=function(){function findPos(ele,moreHeight){var curtop=0;if(ele&&ele.offsetParent){do{curtop+=ele.offsetTop}while(ele=ele.offsetParent)}if(moreHeight){curtop+=moreHeight}window.scroll(0,[curtop])}return findPos}();if(!String.prototype.trim){(function(){var rtrim=/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g;String.prototype.trim=function(){return this.replace(rtrim,"")}})()}
angular.module("comment",[]);
angular.module("comment").factory("CommentsService",CommentsService).factory("CommentService",CommentService).factory("CommentsNewestService",CommentsNewestService);function CommentsService(BaseDataModel,Restangular,$q){var commentsModel;commentsModel=new BaseDataModel;commentsModel.getCommentsByPostId=function(postId){commentsModel.isRefresh=true;return Restangular.all("comments").one(postId).get().then(function(data){commentsModel.setData(data)},function(){commentsModel.isRefresh=false;$q.reject("get comments failed")})};commentsModel.getUserComments=function(username){commentsModel.isRefresh=true;return Restangular.all("userdata").one(username).one("comments").getList().then(function(data){commentsModel.setData(data)},function(err){commentsModel.clearData();$q.reject("no comments")})};return commentsModel}function CommentService(BaseDataModel,$q,Restangular,$stateParams,detectedPreventCloseService){var commentModel;commentModel=new BaseDataModel;var commentRest=Restangular.all("comments");commentModel.addComment=function(commentData){commentModel.isRefresh=true;return commentRest.one($stateParams.postId).post("",commentData).then(function(){commentModel.isRefresh=false},function(){return $q.reject("failed to add comment");commentModel.isRefresh=false})};commentModel.deleteComment=function(commentId){detectedPreventCloseService.isRefresh=true;commentModel.isRefresh=true;return commentRest.one(commentId).remove().then(function(){detectedPreventCloseService.isRefresh=false;commentModel.isRefresh=false},function(){detectedPreventCloseService.isRefresh=false;commentModel.isRefresh=false;$q.reject("not remove comment")})};return commentModel}function CommentsNewestService(BaseDataModel,CommentsService,$stateParams,Restangular){var time;var newestComments=new BaseDataModel;var commentRest=Restangular.all("comments");function getNewestComments(){newestComments.isRefresh=true;if(CommentsService.data.length===0){commentRest.one($stateParams.postId).one("newestcomments").get({time:""}).then(function(data){CommentsService.data=data;newestComments.isRefresh=false},function(err){$q.reject("comments get newest failed");newestComments.isRefresh=false})}else{time=CommentsService.data[CommentsService.data.length-1].createTimemap;commentRest.one($stateParams.postId).one("newestcomments").get({time:time}).then(function(data){CommentsService.data=CommentsService.data.concat(data);newestComments.isRefresh=false},function(err){newestComments.isRefresh=false;$q.reject("failed to get newsest comment")})}}return{getNewestComments:getNewestComments}}
angular.module("comment").directive("strongComment",strongComment);function strongComment($location,$timeout){return{restrict:"A",link:function(scope,ele,attr){var commentId=$location.hash();if(commentId){$timeout(function(){var targetComment=ele[0].querySelector("#commentid_"+commentId);scrollToElement(targetComment,-70);targetComment=angular.element(targetComment);targetComment.addClass("strong-comment")})}}}}
angular.module("comment").controller("CommentsController",CommentsController);function CommentsController(CommentsService,CommentService,CommentsNewestService,UserService,modalService){var vm=this;vm.commentsData=CommentsService;vm.commentData=CommentService;vm.userData=UserService;vm.addComment=function(form){if(!UserService.isUserExist){document.querySelector("#user-login").click();return}if(form.content.$untouched){form.content.$setValidity("empty",false)}if(form.$valid&&!vm.commentData.isRefresh){var config={content:vm.commentData.data.content};vm.commentData.addComment(config).then(function(){vm.commentData.data.content="";CommentsNewestService.getNewestComments()},function(){vm.commentData.data.content=""})}};vm.popupDeleteCommentConfirm=function(index,comment){CommentService.commentIndex=index;CommentService.comment=comment;modalService.init({templateUrl:"/angularapp/user/user.deletecomment.confirm.html",closeModal:[".modal-close-btn",".modal-bg",".button-cancel"],controller:"CommentsController",controllerAs:"Comment"})};vm.deleteComment=function(){CommentService.deleteComment(CommentService.comment.commentId).then(function(){vm.commentsData.data.splice(CommentService.commentIndex,1);modalService.closeDialog().then(function(){modalService.init({template:{content:"删除成功"},closeTime:800})})})}}
angular.module("modalBuilder",[]);angular.module("modalBuilder").factory("modalService",modalService);angular.module("modalBuilder").factory("detectedPreventCloseService",detectedPreventCloseService);function detectedPreventCloseService(BaseDataModel){var detectedData=new BaseDataModel;return detectedData}function modalService($q,$animate,$rootScope,$document,$timeout,$templateRequest,$compile,$controller,detectedPreventCloseService){var modalBgTemplate='<div class="modal-bg"></div>';var modalTransparentBg='<div class="modal-trans-bg"></div>';var isDialogBuilded=false,isBgBuilded=false,isBgClickable=true,dialogTemplate="",isAnimating=false;var modalBgClass=".modal-bg",dialogClass=".modal-content",defaultCloseBtn=".modal-close-btn";function modalBuilder(){var scope,eleCompiled;var self=this;self.init=function(options){if(isAnimating){return}var modalDefer=$q.defer();scope=$rootScope.$new();getTemplate(options).then(function(dialogTemplate){$q.all([buildModalBg(),buildDialog(dialogTemplate)]).then(function(data){var modalEle=angular.element(document.querySelector(".modal-bg"));setCloseModalEle(options.closeModal,modalBgClass,function(){isBgBuilded=false;isDialogBuilded=false;scope.$destroy();modalDefer.reject("modalClose")});setCloseModalEle(options.closeDialog,dialogClass,function(){isDialogBuilded=false;modalDefer.resolve("dialogClose")});if(options.closeTime){$timeout(function(){self.closeModal(modalDefer)},options.closeTime)}modalDefer.notify("notify")})},function(err){});return modalDefer.promise;function buildModalBg(){var defer=$q.defer();if(isBgBuilded===false){isAnimating=true;var modalBgEle=angular.element(modalBgTemplate);var modalTransBg=angular.element(modalTransparentBg);var bodyEle=$document.find("body");modalTransBg.css("height",document.documentElement.scrollHeight+"px");bodyEle.append(modalBgEle);$animate.enter(modalTransBg,bodyEle).then(function(){isAnimating=false;defer.resolve("finishEnter")});isBgBuilded=true}else{defer.resolve("Already builded")}return defer.promise}function buildDialog(template){var defer=$q.defer();if(!isDialogBuilded){isAnimating=true;var modalDialogEle=angular.element(template);var modalBgEle=angular.element(document.querySelector(".modal-bg"));var mycon;$timeout(function(){eleCompiled=$compile(modalBgEle)(scope)});var locals={$scope:scope,$element:eleCompiled};if(options.controller){mycon=$controller(options.controller,locals)}if(options.controllerAs){scope[options.controllerAs]=mycon}scrollToElement(modalDialogEle,-50);$animate.enter(modalDialogEle,modalBgEle).then(function(){isAnimating=false;isDialogBuilded=true;defer.resolve("dialogBuilded")})}return defer.promise}function setCloseModalEle(classArrs,removePart,callback){if(!classArrs){return}var removeTransBg;var removeEle=angular.element(document.querySelector(removePart));if(removePart===modalBgClass){removeTransBg=angular.element(document.querySelector(".modal-trans-bg"))}angular.forEach(classArrs,function(className){var closeEle=angular.element(document.querySelector(className));closeEle.bind("click",function(e){if(angular.element(e.target).hasClass(className.substr(1))&&!isAnimating&&!detectedPreventCloseService.isRefresh){scope.$apply(function(){if(removeTransBg){$animate.addClass(removeTransBg,"fade").then(function(){removeTransBg.remove()})}$animate.addClass(removeEle,"fade").then(function(){isAnimating=false;removeEle.remove();callback()})})}})})}function getTemplate(options){dialogTemplate="";var defer=$q.defer();if(options.template){dialogTemplate+='<div class="modal-content post-radius">';var tempConfig=options.template;if(tempConfig.title){dialogTemplate+='<div class="modal-header"><button class="modal-close-btn" type="button">×</button><h4>';dialogTemplate+=tempConfig.title;dialogTemplate+="</h4></div>"}dialogTemplate+='<div class="modal-body">';if(tempConfig.hintIcon){dialogTemplate+='<img src="';dialogTemplate+=tempConfig.hintIcon+'"/>'}if(tempConfig.content){dialogTemplate+="<span>";dialogTemplate+=tempConfig.content+"</span>"}dialogTemplate+="</div></div>";defer.resolve(dialogTemplate)}else if(options.templateUrl){$templateRequest(options.templateUrl,true).then(function(template){defer.resolve(template)},function(err){defer.reject(err)})}else{defer.reject("no template found")}return defer.promise}};self.closeDialog=function(){var modalDefer=$q.defer();if(isDialogBuilded){isAnimating=true;var removeEle=angular.element(document.querySelector(dialogClass));var modalEle=angular.element(document.querySelector(modalBgClass));removeEle.off("click");modalEle.off("click");$animate.addClass(removeEle,"fade").then(function(){isDialogBuilded=false;removeEle.remove();isAnimating=false;modalDefer.resolve("closeDialog kkk")})}else{modalDefer.resolve("closeDialog kkk")}return modalDefer.promise};self.closeModal=function(modalDefer){var defer,removeEle,removeBg;defer=$q.defer();if(isBgBuilded){isAnimating=true;removeEle=angular.element(document.querySelector(modalBgClass));removeBg=angular.element(document.querySelector(".modal-trans-bg"));$animate.addClass(removeBg,"fade").then(function(){removeBg.remove()});$animate.addClass(removeEle,"fade").then(function(){isBgBuilded=false;isDialogBuilded=false;removeEle.remove();scope.$destroy();isAnimating=false;defer.reject("closeModal")})}else{defer.reject("closeModal")}return defer.promise}}return new modalBuilder}
angular.module("post",[]);
angular.module("post").factory("PostsService",PostsService).factory("PostSingleDataService",PostSingleDataService).factory("PostService",PostService);function PostsService(BaseDataModel,$q,Restangular,PromisesService){var postsModel,limit,skip;postsModel=new BaseDataModel;postsModel.isEndPosts=false;postsModel.clearData=function(){this.data=null;this.isRefresh=false;this.isEndPosts=false};postsModel.getParams=getInitParams;postsModel.getNextPage=getNextPage;var PostRest=Restangular.all("postsdata");postsModel.getAllPostsData=function(params){postsModel.isRefresh=true;var defer=$q.defer();PromisesService.addPromise(defer);PostRest.withHttpConfig({timeout:defer.promise}).getList(params).then(function(data){postsModel.setData(data)},function(err){postsModel.resetData()})};var TagRest=Restangular.one("tagposts");postsModel.getTagPosts=function(tagname,params){var defer=$q.defer();PromisesService.addPromise(defer);postsModel.isRefresh=true;TagRest.withHttpConfig({timeout:defer.promise}).getList(tagname,params).then(function(data){postsModel.setData(data);if(data.length<limit){postsModel.isEndPosts=true}},function(err){postsModel.resetData();postsModel.isRefresh=false})};postsModel.getUserPosts=function(username){postsModel.clearData();postsModel.isRefresh=true;Restangular.all("userdata").one(username).one("posts").getList().then(function(data){postsModel.setData(data)},function(err){$q.reject("no data")})};return postsModel;function getInitParams(){var winHeight=screen.height;var itemHeight=130;limit=Math.round(winHeight/itemHeight);skip=0;return{limit:limit,skip:skip}}function getNextPage(url,urlParams){var nextPageDefer=$q.defer();PromisesService.addPromise(nextPageDefer);return function(){if(!postsModel.isRefresh&&!postsModel.isEndPosts){skip+=limit;postsModel.isRefresh=true;Restangular.one(url).withHttpConfig({timeout:nextPageDefer.promise}).getList(urlParams,{limit:limit,skip:skip}).then(function(data){if(data.length<limit){postsModel.isEndPosts=true}postsModel.data=postsModel.data.concat(data);postsModel.isRefresh=false},function(err){postsModel.isRefresh=false;$q.reject("next error")})}}}}function PostSingleDataService(BaseDataModel,Restangular,PromisesService,$q){var postModel;postModel=new BaseDataModel;postModel.getPostData=function(id){postModel.isRefresh=true;var defer=$q.defer();PromisesService.addPromise(defer);Restangular.one("postsdata",id).get().then(function(data){postModel.setData(data)},function(err){postModel.resetData()})};return postModel}function PostService(BaseDataModel,Restangular,$q,detectedPreventCloseService){var postDataModel;postDataModel=new BaseDataModel;var postRest=Restangular.all("postsdata");postDataModel.getPostData=function(postId){detectedPreventCloseService.isRefresh=true;postDataModel.clearData();postDataModel.isRefresh=true;return postRest.one(postId).get().then(function(data){postDataModel.setData(data);detectedPreventCloseService.isRefresh=false},function(err){postDataModel.clearData();detectedPreventCloseService.isRefresh=false;return $q.reject("not get post data")})};postDataModel.postPostData=function(data){detectedPreventCloseService.isRefresh=true;postDataModel.isRefresh=true;return postRest.post(data).then(function(responseData){postDataModel.isRefresh=false;detectedPreventCloseService.isRefresh=false;return responseData},function(err){detectedPreventCloseService.isRefresh=false;postDataModel.isRefresh=false;return $q.reject("not post post")})};postDataModel.updatePostData=function(postId,data){detectedPreventCloseService.isRefresh=true;this.isRefresh=true;var post=postRest.one(postId);post.content=data.content;post.tags=data.tags;post.postprivacy=data.postprivacy;return post.put().then(function(response){postDataModel.isRefresh=false;detectedPreventCloseService.isRefresh=false;return response},function(err){postDataModel.isRefresh=false;detectedPreventCloseService.isRefresh=false;return $q.reject("faild update post")})};postDataModel.deletePost=function(postId){detectedPreventCloseService.isRefresh=true;this.isRefresh=true;return postRest.one(postId).remove().then(function(){detectedPreventCloseService.isRefresh=false;postDataModel.isRefresh=false},function(){detectedPreventCloseService.isRefresh=false;postDataModel.isRefresh=false;return $q.reject("faild to remove post")})};return postDataModel}
angular.module("post").directive("tagsInput",tagsInput).directive("popupCreatepostForm",popupCreatepostForm).directive("popupModifyPanel",popupModifyPanel).directive("popupUpdateModal",popupUpdateModal);function tagsInput(detectedPreventCloseService){return{restrict:"A",scope:{postTags:"=ngModel",disabled:"=ngDisabled",PostForm:"=tagsInput"},controller:function($scope){if(!$scope.postTags){$scope.postTags=[]}$scope.removeTag=function(tagIndex){if(!detectedPreventCloseService.isRefresh){$scope.postTags.splice(tagIndex,1)}};$scope.addTag=function($event){if(detectedPreventCloseService.isRefresh){return}if($event.keyCode===13||$event.keyCode===188){var inputValue=$scope.tagVal;if(inputValue.indexOf(",")>-1){inputValue=inputValue.substr(0,inputValue.length-1)}addTagFn(inputValue)}};$scope.$watch(function(){if($scope.postTags){return $scope.postTags.length}else{return-1}},function(newVal,oldVal){if(newVal>5){$scope.PostForm.tagsInput.$setValidity("tagsMaxLength",false)}else{$scope.PostForm.tagsInput.$setValidity("tagsMaxLength",true)}});$scope.addTagClick=function(){addTagFn($scope.tagVal)};function addTagFn(inputValue){if(!inputValue.trim()){return}if($scope.postTags.indexOf(inputValue)===-1){$scope.postTags.push(inputValue);$scope.PostForm.tags=$scope.postTags}$scope.tagVal=""}},controllerAs:"tagsCtrl",templateUrl:"/angularapp/tags/tags.input.html"}}function popupCreatepostForm(){return{restrict:"A",controller:"PostController",link:function(scope,ele,attr,ctrl){ele.bind("click",function(){ctrl.popupCreatePostModal()})}}}function popupModifyPanel(modalService){return{restrict:"A",link:function(scope,ele,attr,ctrl){ele.bind("click",function(){modalService.init({templateUrl:"/angularapp/user/user.modify.info.html",closeModal:[".modal-close-btn",".modal-bg",".button-cancel"]})})}}}function popupUpdateModal(){return{restrict:"A",controller:"PostListController",link:function(scope,ele,attr,ctrl){ele.bind("click",function(){ctrl.popupUpdatePostModal()})}}}
angular.module("post").controller("PostListController",PostListController).controller("PostSingleContentController",PostSingleContentController).controller("PostController",PostController);function PostListController(PostsService){var vm=this;vm.postsData=PostsService}function PostController(PostService,PostsService,modalService,$location){var vm=this;vm.postFormDataModel={};vm.formState="";vm.title=PostService.title;vm.formState=PostService.formState;vm.postFormDataModel=PostService;vm.popupUpdatePostModal=function(postId){PostService.formState="update";PostService.title="更新文章";modalService.init({templateUrl:"/angularapp/post/post.creator.html",closeModal:[".modal-close-btn",".modal-bg",".button-cancel"],controller:"PostController",controllerAs:"Post"}).then(function(){},function(){vm.postFormDataModel.data=null});PostService.getPostData(postId)};vm.updatePost=function(form){vm.formState="update";if(!form.$valid){return}var updateData={content:vm.postFormDataModel.data.content,tags:vm.postFormDataModel.data.tags,postprivacy:"public"};PostService.updatePostData(vm.postFormDataModel.data._id,updateData).then(function(response){modalService.closeModal();$location.path("/post/"+response._id)},function(error){})};vm.popupCreatePostModal=function(){PostService.formState="create";PostService.title="创建文章";PostService.clearData();modalService.init({templateUrl:"/angularapp/post/post.creator.html",closeModal:[".modal-close-btn",".modal-bg",".button-cancel"],controller:"PostController",controllerAs:"Post"})};vm.createPost=function(form){if(form.title.$untouched){form.title.$setValidity("empty",false)}if(form.content.$untouched){form.content.$setValidity("empty",false)}if(form.$invalid){return}vm.postFormDataModel.data.postprivacy="public";PostService.postPostData(vm.postFormDataModel.data).then(function(data){modalService.closeModal();$location.path("/post/"+data._id);scrollToElement(document.querySelector("#nav"))})};vm.deletePost=function(){PostService.deletePost(PostService.postId).then(function(){PostsService.data.splice(PostService.index,1);modalService.closeDialog().then(function(){modalService.init({template:{content:"删除成功"},closeTime:800})})})};vm.popupDeletePostModal=function(index,postId,title){PostService.title=title;PostService.postId=postId;PostService.postIndex=index;modalService.init({templateUrl:"/angularapp/user/user.deletepost.confirm.html",closeModal:[".modal-close-btn",".modal-bg",".button-cancel"],controller:"PostController",controllerAs:"Post"})}}function PostSingleContentController(PostSingleDataService,Restangular,UserService){var vm=this;vm.postData=PostSingleDataService;vm.postFavIsLoading=false;vm.postFav=function(){vm.postFavIsLoading=true;if(!UserService.isUserExist){document.querySelector("#user-login").click();return}Restangular.all("userdata").one(vm.postData.data._id).one("switchfav").get().then(function(data){vm.postData.data.isFav=data;vm.postFavIsLoading=false},function(){vm.postFavIsLoading=false})}}
angular.module("tags",[]);
angular.module("tags").factory("TagsHomeService",TagsHomeService).factory("TagsListAllService",TagsListAllService);function TagsHomeService(BaseDataModel,Restangular,$q,PromisesService){var tagsModel;tagsModel=new BaseDataModel;var TagsRest=Restangular.all("tagsdata");tagsModel.getLimitTagsData=function(config){tagsModel.isRefresh=true;return TagsRest.getList(config).then(function(data){tagsModel.setData(data)},function(){tagsModel.isRefresh=false;$q.reject("not get limit tags")})};return tagsModel}function TagsListAllService(BaseDataModel,Restangular,$q,PromisesService){var tagsModel;tagsModel=new BaseDataModel;var TagsRest=Restangular.all("tagsdata");tagsModel.getFullTagsData=function(){tagsModel.isRefresh=true;return TagsRest.getList().then(function(data){var tagsData=filterArray(data);tagsData=reArrangeTagsData(tagsData);tagsModel.setData(tagsData);return tagsData},function(){tagsModel.isRefresh=false;$q.reject("not get tags")})};function reArrangeTagsData(tagsData){if(!tagsData.length){return[]}var recordEmpty;var firstLetter,tagObjIndex;var firstLetterArr=[];var tagsArr=[];for(var i in tagsData){if(tagsData[i].tagName===" "){recordEmpty={firstLetter:"空标签",tagArr:[{tagName:"",count:tagsData[i].publicCount}]};continue}firstLetter=tagsData[i].tagName.substring(0,1);tagObjIndex=firstLetterArr.indexOf(firstLetter);if(tagObjIndex===-1){firstLetterArr.push(firstLetter);tagsArr.push({firstLetter:firstLetter,tagArr:[{tagName:tagsData[i].tagName,count:tagsData[i].publicCount}]})}else{tagsArr[tagObjIndex].tagArr.push({tagName:tagsData[i].tagName,count:tagsData[i].publicCount})}}if(recordEmpty){tagsArr.push(recordEmpty)}return tagsArr}function filterArray(data){var arr=[];for(var i in data){if(!isNaN(i)){arr.push(data[i])}}return arr}return tagsModel}
angular.module("tags").controller("TagsHomeController",TagsHomeController).controller("TagsListAllController",TagsListAllController);function TagsHomeController(TagsHomeService,$state,$stateParams){var vm=this;vm.tagsData=TagsHomeService;vm.stateName=$state.current.name;vm.stateTagName=$stateParams.tagname}function TagsListAllController(TagsListAllService){var vm=this;vm.tagsData=TagsListAllService}
angular.module("user",[]);
angular.module("user").factory("UserService",UserService).factory("UserData",UserData).factory("UserInfoData",UserInfoData).factory("UserInfoService",UserInfoService).factory("UserAllSubjects",UserAllSubjects).factory("UserDeleteConfirmInfoService",UserDeleteConfirmInfoService);function UserService(UserData,Restangular,$q,detectedPreventCloseService){var userData;userData=new UserData;var UserState=Restangular.all("userstate");var UserData=Restangular.all("userdata");userData.userLogin=function(userInfo){userData.isRefresh=true;detectedPreventCloseService.isRefresh=true;return UserState.one("login").post("",userInfo).then(function(response){userData.data=response.userData;window.localStorage.setItem("token",response.token);userData.isUserExist=true;userData.isUserDataVaild=null;userData.isRefresh=false;detectedPreventCloseService.isRefresh=false},function(err){userData.data=null;userData.isUserExist=false;userData.isUserDataVaild=false;userData.isRefresh=false;detectedPreventCloseService.isRefresh=false;return $q.reject()})};userData.checkUserIsAlreadyLogin=function(token){userData.isRefresh=true;return UserState.one("checkuser").post("",token).then(function(response){userData.data=response;userData.isUserExist=true;userData.isRefresh=false},function(error){userData.data=null;userData.isUserExist=false;userData.isRefresh=false;return $q.reject()})};userData.userSignout=function(){return UserState.one("signout").get().then(function(){userData.data=null;userData.isUserExist=false;window.localStorage.setItem("token","");window.location.reload()},function(){return $q.reject("signout error")})};userData.userSignup=function(userInputData){userData.isRefresh=true;detectedPreventCloseService.isRefresh=true;return UserData.post(userInputData).then(function(response){userData.data=response.userData;userData.isUserExist=true;userData.isRefresh=false;window.localStorage.setItem("token",response.token);detectedPreventCloseService.isRefresh=false},function(error){userData.data=null;userData.isUserExist=false;userData.isRefresh=false;detectedPreventCloseService.isRefresh=false;return $q.reject("sign in error")})};userData.userUpdate=function(userUpdateData){userData.isRefresh=true;detectedPreventCloseService.isRefresh=true;var user=UserData.one(userData.data.username);user.description=userUpdateData.description;user.imgData=userUpdateData.imgData;return user.put().then(function(response){userData.data=response.data;userData.isUserExist=true;userData.isRefresh=true;window.localStorage.setItem("token",response.token);window.location.reload()},function(err){userData.isRefresh=true;detectedPreventCloseService.isRefresh=false;return $q.reject("update failed")})};userData.userCheckUnique=function(){return UserState.one("checkuserisunique").get().then(null,function(){return $q.reject})};return userData}function UserData(){function UserData(){this.data=this.data||{};this.isRefresh=this.isRefresh||true;this.isUserExist=this.isUserExist||false;this.isUserDataVaild=this.isUserDataVaild||null}UserData.prototype.clearData=function(){this.data={};this.isRefresh=false;this.isUserExist=false;window.localStorage.setItem("token","")};return UserData}function UserInfoData(){function UserInfoData(){this.data=this.data||{};this.isRefresh=this.isRefresh||true;this.isUserAuthorized=this.isUserAuthorized||false}return UserInfoData}function UserInfoService(BaseDataModel,Restangular,$q){var userInfo;userInfo=new BaseDataModel;userInfo.getUserData=function(username){userInfo.isRefresh=true;return Restangular.all("userdata").one(username).get().then(function(data){userInfo.setData(data);userInfo.isRefresh=false},function(){userInfo.isRefresh=false;$q.reject("not find user")})};return userInfo}function UserAllSubjects(BaseDataModel,Restangular,$q,PostsService,CommentsService){var userSubjectData;userSubjectData=new BaseDataModel;var UserData=Restangular.all("userdata");userSubjectData.getUserFav=function(username){userSubjectData.isRefresh=true;return UserData.one(username).one("fav").get().then(function(data){userSubjectData.setData(data);userSubjectData.isRefresh=false},function(){userSubjectData.clearData();userSubjectData.isRefresh=false;$q.reject("not find favs")})};return userSubjectData}function UserDeleteConfirmInfoService(BaseDataModel){var userSubInfo;userSubInfo=new BaseDataModel;return userSubInfo}
angular.module("user").directive("checkMaxLength",checkMaxLength).directive("checkRepeat",checkRepeat).directive("checkUnique",checkUnique).directive("popupSignupModal",popupSignupModal).directive("checkUserRecord",checkUserRecord).directive("checkInput",checkInput).directive("checkPattern",checkPattern).directive("popupLoginModal",popupLoginModal).directive("checkInputFile",checkInputFile).directive("triggerElementAction",triggerElementAction);function checkMaxLength(){var getStrLength=function(str){var strLength=0;for(var i=0;i<str.length;i++){strLength+=str.charCodeAt(i)>255?2:1}return strLength};return{restrict:"A",require:"ngModel",link:function(scope,ele,attrs,model){var maxLength=parseInt(attrs.checkMaxLength);scope.$watch(function(){return model.$viewValue},function(newVal,oldVal){if(newVal){if(getStrLength(newVal)>maxLength){model.$setValidity("maxLength",false)}else{model.$setValidity("maxLength",true)}}})}}}function checkRepeat(){return{restrict:"A",require:"ngModel",link:function(scope,ele,attr,model){var attrsValues=attr.checkRepeat.split(",");scope.$watch(function(){var pwdRepeat=scope.$eval(attrsValues[0]).$viewValue;var pwd=scope.$eval(attrsValues[1]).$viewValue;if(pwdRepeat===pwd){return true}else{return false}},function(newVal,oldVal){if(newVal){model.$setValidity("repeat",true)}else{model.$setValidity("repeat",false)}})}}}function checkUnique($q,Restangular){return{restrict:"A",require:"ngModel",link:function(scope,ele,attrs,model){var params=attrs.checkUnique;model.$asyncValidators[params]=function(modalVal,viewVal){if(model.$isEmpty(modalVal)){return $q.when()}return Restangular.all("check").one(params).one(viewVal).get().then(function(){model.$setValidity("isUnique",true)},function(){model.$setValidity("isUnique",false);$q.reject("")})}}}}function popupSignupModal(){return{restrict:"A",controller:"UserController",link:function(scope,ele,attr,ctrl){ele.bind("click",function(){ctrl.popupUserSignupModal()})}}}function popupLoginModal(){return{restrict:"A",controller:"UserController",link:function(scope,ele,attr,ctrl){ele.bind("click",function(){ctrl.popupUserLoginModal()})}}}function checkUserRecord(UserService,UserData){return{restrict:"A",link:function(scope,ele,attr,ctrl){checkLogin();function checkLogin(){UserService.checkUserIsAlreadyLogin().then(function(data){UserData.data=data.data;UserData.isRefresh=false;UserData.isUserExist=true},function(data){UserData.isUserExist=false;UserData.isRefresh=false})}}}}function checkInput(){return{restrict:"A",require:"ngModel",link:function(scope,ele,attr,model){ele.bind("blur",function(){if(model.$viewValue){model.$setValidity("empty",true);scope.$apply()}else{model.$setValidity("empty",false);scope.$apply()}})}}}function checkPattern(){return{restrict:"A",require:"ngModel",link:function(scope,ele,attr,model){var reg;var match=attr.checkPattern.match(new RegExp("^/(.*?)/([gimy]*)$"));scope.$watch(function(){return model.$viewValue},function(newVal,oldVal){if(newVal){reg=new RegExp(match[1],match[2]);if(reg.test(newVal)){model.$setValidity("pattern",false)}else{model.$setValidity("pattern",true)}}})}}}function checkInputFile(){return{restrict:"A",require:"ngModel",link:function(scope,ele,attr,model){ele.on("change",function(){if(ele[0].files[0]){scope.User.updateModel.userAvatar=ele[0].files[0];scope.$apply()}})}}}function triggerElementAction(){return{link:function(scope,ele,attr){var id=attr.triggerElementAction;ele.on("click",function(){document.querySelector(id).click()})}}}
angular.module("user").controller("UserController",UserController).controller("UserInfoController",UserInfoController).controller("UserSubjectController",UserSubjectController);function UserController($scope,UserService,modalService,md5){var vm=this;UserService.isUserDataVaild=null;vm.userData=UserService;vm.userFormData={};vm.passwordPattern=/^[a-zA-Z0-9,\.\/<>?;:'"`!@#$%^&*()\[\]{}_+=|\\-]+$/;vm.signupModel={};vm.loginModel={};vm.userForm={};vm.updateModel={};vm.updateModel.uploadFileProcess=0;vm.updateModel.userAvatar="";vm.userAvatar="";vm.updateForm={};vm.isUserAvatarShow=true;vm.popupUserSignupModal=function(){modalService.closeDialog().then(function(){modalService.init({templateUrl:"/angularapp/user/user.signup.html",closeModal:[".modal-close-btn",".modal-bg",".button-cancel"]}).then(null,null,function(data){})})};vm.popupUserLoginModal=function(){modalService.init({templateUrl:"/angularapp/user/user.login.html",closeModal:[".modal-close-btn",".modal-bg"],closeDialog:[".goSignup"]}).then(function(data){return modalService.init({templateUrl:"/angularapp/user/user.signup.html",closeModal:[".modal-close-btn",".modal-bg"]})},function(data){})};vm.loginUser=function(loginForm){if(!loginForm.username.$modelValue&&loginForm.username.$untouched){loginForm.username.$setValidity("empty",false)}if(!loginForm.password.$modelValue&&loginForm.password.$untouched){loginForm.password.$setValidity("empty",false)}if(loginForm.$valid){var loginData={username:vm.loginModel.username,password:md5.createHash(vm.loginModel.password)};UserService.userLogin(loginData).then(function(){modalService.closeDialog().then(function(){modalService.init({template:{content:"登录成功"},closeTime:800});window.location.reload()})})}};vm.signUpUser=function(signupForm){if(!signupForm.username.$viewValue&&signupForm.username.$untouched){signupForm.username.$setValidity("empty",false)}if(!signupForm.email.$viewValue&&signupForm.email.$untouched){signupForm.email.$setValidity("empty",false)}if(!signupForm.password.$viewValue&&signupForm.password.$untouched){signupForm.password.$setValidity("empty",false)}if(!signupForm.passwordRepeat.$viewValue&&signupForm.passwordRepeat.$untouched){signupForm.passwordRepeat.$setValidity("empty",false)}if(vm.signupModel.password!==vm.signupModel)if(!signupForm.$invalid&&!signupForm.$pending){showDialog()}function showDialog(){var userData={username:vm.signupModel.username,email:vm.signupModel.email,password:md5.createHash(vm.signupModel.password)};UserService.userSignup(userData).then(function(data){$scope.$destroy();modalService.closeDialog().then(function(msg){return modalService.init({template:{content:"注册成功"},closeTime:800})})},function(data){modalService.closeDialog().then(function(data){$scope.$destroy();return modalService.init({template:{content:"注册失败"},closeTime:800})})})}};vm.signOutUser=function(){UserService.userSignout()};vm.updateUser=function(form){var isModifyDescription=vm.updateModel.description!==vm.userData.data.description;if(form.$valid&&(isModifyDescription||!vm.isUserAvatarShow)){config={description:vm.updateModel.description,imgData:vm.isUserAvatarShow?"":vm.myCroppedImage};UserService.userUpdate(config).then(function(){window.location.reload()},function(){})}else{modalService.closeModal()}};vm.initUpdateData=function(form){vm.updateModel.description=UserService.data.description;vm.userAvatar=UserService.data.avatar;vm.updateForm=form};var eventType=null;var isFinish=false;vm.selectFile=function(e){if(!isFinish){document.querySelector("#fileInput").click();isFinish=true}};vm.myImage="";vm.myCroppedImage="";var handleFileSelect=function(evt){var fileType;var file=evt.currentTarget.files[0];if(file&&file.size>5e5){vm.updateForm.file.$setValidity("maxSize",false);vm.myCroppedImage="";vm.isUserAvatarShow=true;isFinish=false}else{vm.updateForm.file.$setValidity("maxSize",true);fileType=file.name.split(".");fileType=fileType[fileType.length-1]}if(fileType&&fileType!=="jpeg"&&fileType!=="png"&&fileType!=="jpg"){vm.updateForm.file.$setValidity("fileType",false);vm.isUserAvatarShow=true;vm.myCroppedImage="";isFinish=false}else{vm.updateForm.file.$setValidity("fileType",true)}if(vm.updateForm.file.$valid){vm.isUserAvatarShow=false;var reader=new FileReader;reader.onload=function(evt){$scope.$apply(function($scope){vm.myImage=evt.target.result;isFinish=false})};reader.readAsDataURL(file)}};angular.element(document.querySelector("#fileInput")).on("change",handleFileSelect)}function UserInfoController(UserInfoService){var vm=this;vm.userData=UserInfoService}function UserSubjectController(UserAllSubjects,UserService,$stateParams){var vm=this;vm.subjectData=UserAllSubjects;vm.checkIsAuthority=function(){return UserService.data?UserService.data.username===$stateParams.username:false}}
angular.module("suApp",["ui.router","post","tags","user","modalBuilder","comment","ngAnimate","ngMessages","ngTouch","ngResource","ngImgCrop","restangular","angular-md5"]);angular.element(document).ready(function(){angular.bootstrap(document,["suApp"])});
angular.module("suApp").config(configFn);function configFn($locationProvider,$urlRouterProvider,$stateProvider,$httpProvider,$provide){$locationProvider.html5Mode(true);$provide.decorator("$state",function($delegate,$stateParams){$delegate.forceReload=function(){return $delegate.go($delegate.current,$stateParams,{reload:true,inherit:false,notify:true})};return $delegate});$stateProvider.state("home",{url:"/",templateUrl:"/angularapp/post/postlist.html",resolve:{PostsService:function(PostsService){PostsService.clearData();PostsService.getAllPostsData(PostsService.getParams())},TagsHomeService:function(TagsHomeService){TagsHomeService.clearData();TagsHomeService.getLimitTagsData({limit:5})}}}).state("tags",{url:"/tags",templateUrl:"/angularapp/tags/tags.showall.html",resolve:{TagsListAllService:function(TagsListAllService){TagsListAllService.clearData();TagsListAllService.getFullTagsData()}}}).state("tagposts",{url:"/tags/:tagname",templateUrl:"/angularapp/post/postlist.html",resolve:{PostsService:function(PostsService,$stateParams){PostsService.clearData();PostsService.getTagPosts($stateParams.tagname,PostsService.getParams())}}}).state("post",{"abstract":true,url:"/post/:postId",templateUrl:"/angularapp/post/post.showcontent.html",resolve:{postId:["$stateParams",function($stateParams){return $stateParams.postId}],PostSingleDataService:function(PostSingleDataService,$stateParams){PostSingleDataService.clearData();PostSingleDataService.getPostData($stateParams.postId)}}}).state("post.comments",{url:"",views:{comments:{templateUrl:"/angularapp/comment/comment.client.inpost.html",controller:"CommentsController",resolve:{CommentsService:function(CommentsService,$stateParams){CommentsService.getCommentsByPostId($stateParams.postId)}}}}}).state("user",{"abstract":true,url:"/user/:username",templateUrl:"/angularapp/user/user.info.html",resolve:{UserInfoService:function(UserInfoService,$stateParams){UserInfoService.getUserData($stateParams.username)}}}).state("user.posts",{url:"",templateUrl:"/angularapp/user/user.info.posts.html",resolve:{PostsService:function(PostsService,$stateParams){PostsService.getUserPosts($stateParams.username)}}}).state("user.comments",{url:"/comments",templateUrl:"/angularapp/user/user.info.comments.html",resolve:{CommentsService:function(CommentsService,$stateParams){CommentsService.getUserComments($stateParams.username)}}}).state("user.fav",{url:"/fav",templateUrl:"/angularapp/user/user.info.fav.html",resolve:{UserAllSubjects:function(UserAllSubjects,$stateParams){UserAllSubjects.clearData();UserAllSubjects.getUserFav($stateParams.username)}}}).state("404",{templateUrl:"/angularapp/views/error.html"});$httpProvider.interceptors.push("HttpInterceptor");$urlRouterProvider.otherwise(function($injector){$injector.get("$state").go("404")})}
angular.module("suApp").run(runFn);function runFn($rootScope,UserService,PostsService,PromisesService,$http,$templateCache){$http.get("/angularapp/post/postlist.html",{cache:$templateCache});$http.get("/angularapp/tags/tags.showall.html",{cache:$templateCache});$http.get("/angularapp/post/postlist.html",{cache:$templateCache});$http.get("/angularapp/comment/comment.client.inpost.html",{cache:$templateCache});$http.get("/angularapp/user/user.info.html",{cache:$templateCache});$http.get("/angularapp/user/user.info.posts.html",{cache:$templateCache});$http.get("/angularapp/user/user.info.comments.html",{cache:$templateCache});$http.get("/angularapp/user/user.info.fav.html",{cache:$templateCache});$http.get("/angularapp/views/error.html",{cache:$templateCache});$http.get("/angularapp/views/error.html",{cache:$templateCache});$http.get("/angularapp/user/user.signup.html",{cache:$templateCache});$http.get("/angularapp/user/user.login.html",{cache:$templateCache});$http.get("/angularapp/user/user.deletepost.confirm.html",{cache:$templateCache});$http.get("/angularapp/post/post.creator.html",{cache:$templateCache});$http.get("/images/avatar.jpg",{cache:$templateCache});$http.get("/images/loading.gif",{cache:$templateCache});$rootScope.$on("$stateChangeStart",function(event,toState,toParams,fromState,fromParams){var token=window.localStorage.getItem("token")?window.localStorage.getItem("token"):"";var params={token:token};UserService.checkUserIsAlreadyLogin(params);PromisesService.resetAllPromise()});$rootScope.$on("$stateChangeSuccess",function(event,toState,toParams,fromState,fromParams){var stateName=toState.name;var nextPageFn;if(stateName==="home"){nextPageFn=PostsService.getNextPage("postsdata")}if(stateName==="tagposts"){nextPageFn=PostsService.getNextPage("tagposts",toParams.tagname)}window.onscroll=function(){if(stateName=="home"||stateName=="tagposts"){if(window.innerHeight+window.scrollY+80>=document.querySelector("#full-wrapper").offsetHeight){nextPageFn()}}}})}
angular.module("suApp").factory("BaseDataModel",BaseDataModel).factory("HttpInterceptor",HttpInterceptor).factory("PromisesService",PromisesService);function BaseDataModel(){function BaseDataModel(){this.data=this.data||null;this.isRefresh=this.isRefresh||false;this.isTimeout=this.isTimeout||false}BaseDataModel.prototype.setData=function(data){this.data=data;this.isRefresh=false};BaseDataModel.prototype.resetData=function(){this.data=null;this.isRefresh=false};BaseDataModel.prototype.clearData=function(){this.data=null;this.isRefresh=false;this.isTimeout=false};return BaseDataModel}function HttpInterceptor($q,$injector){var interceptor={request:function(config){var token=window.localStorage.getItem("token")?window.localStorage.getItem("token"):"";config.headers.authorization=token;return config},response:function(result){return result},responseError:function(error){var modal=$injector.get("modalService");var userService=$injector.get("UserService");if(error.status===404){$injector.get("$state").go("404");return $q.reject(error)}if(error.status===401){userService.clearData();modal.closeModal().then(function(){},function(){document.querySelector("#user-login").click()})}if(error.status>=500){var modal=$injector.get("modalService");var userService=$injector.get("UserService");userService.clearData();modal.closeModal().then(function(){},function(){modal.init({template:{content:"服务器错误,请尝试刷新"},closeTime:1e3})})}return $q.reject(error)}};return interceptor}function PromisesService($q){function Promises(){this.promises=this.promises||[]}Promises.prototype.addPromise=function(obj){this.promises.push(obj)};Promises.prototype.getPromise=function(index){return this.promises[index]};Promises.prototype.resetAllPromise=function(){for(var i in this.promises){this.promises[i].resolve();this.promises[i]=$q.defer()}};Promises.prototype.clear=function(){this.promises=[]};return new Promises}
angular.module("suApp").directive("toggleMenu",toggleMenu).directive("disLoading",disLoading);function toggleMenu($document,$timeout,$animate){function setElementDisplay(element,hideClass){return function(isDisplay){if(isDisplay){if(element.hasClass(hideClass)){element.removeClass(hideClass)}}else{if(!element.hasClass(hideClass)){element.addClass(hideClass)}}}}return{restrict:"A",scope:true,link:function(scope,ele,attr){var hideClass=attr.hideMenuClass;var isClickable=true;var eventType=null;var visible=false;var elements=attr.toggleMenu.split(",");var btnEle=angular.element(document.querySelector(elements[0]));var menuEle=angular.element(document.querySelector(elements[1]));var setEleDisplay=setElementDisplay(menuEle,hideClass);setEleDisplay(visible);$document.on("touchstart click",function(event){if(!isClickable){return}if(eventType===null){eventType=event.type}else if(eventType!==event.type){return}if(btnEle[0]===event.target||btnEle[0].contains(event.target)){visible=!visible;setEleDisplay(visible);return}if(menuEle[0].contains(event.target)){if(visible){isClickable=false;$timeout(function(){visible=!visible;setEleDisplay(visible);isClickable=true},150)}return}if(visible){visible=!visible;setEleDisplay(visible)}})}}}function disLoading(){return{restrict:"A",scope:true,template:'<div class="class"><img src="/images/loading.gif" width="{{ size }}" ><div ng-transclude></div></div>',transclude:true,replace:true,link:function(scope,ele,attr){scope.class=attr.class;scope.showCondition=scope.$eval(attr.disLoading);scope.$watch(function(){return scope.$eval(attr.disLoading)},function(newVal,oldVal){ele.css("display",newVal?"":"none")});if(attr.size){scope.size=attr.size}else{scope.size=40}}}}